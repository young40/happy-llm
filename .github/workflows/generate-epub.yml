name: Generate EPUB from Markdown

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  generate-epub:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup pandoc
      uses: r-lib/actions/setup-pandoc@v2
      
    - name: Install fonts
      run: |
        sudo apt-get update
        sudo apt-get install -y fonts-noto-cjk
        
    - name: Create EPUB metadata
      run: |
        cat > metadata.yaml << 'EOF'
        ---
        title: "Happy-LLM 大语言模型教程"
        author: "DataWhale"
        language: zh-CN
        subject: "大语言模型教程"
        description: "从NLP基础概念到大模型应用的完整教程，包含理论知识和实践代码"
        publisher: "DataWhale"
        rights: "CC BY-NC-SA 4.0"
        identifier: "happy-llm-tutorial"
        cover-image: "docs/images/head.jpg"
        ---
        EOF
        
    - name: Create EPUB style
      run: |
        cat > epub-style.css << 'EOF'
        @charset "UTF-8";
        
        body {
          font-family: "Noto Sans CJK SC", "Microsoft YaHei", "SimSun", "PingFang SC", serif;
          line-height: 1.6;
          margin: 2em;
          color: #333;
          font-size: 16px;
        }
        
        h1 {
          color: #2c3e50;
          border-bottom: 2px solid #3498db;
          padding-bottom: 0.3em;
          margin-top: 2em;
          margin-bottom: 1em;
          font-size: 1.8em;
        }
        
        h2 {
          color: #34495e;
          border-bottom: 1px solid #bdc3c7;
          padding-bottom: 0.2em;
          margin-top: 1.5em;
          margin-bottom: 0.8em;
          font-size: 1.4em;
        }
        
        h3 {
          color: #7f8c8d;
          margin-top: 1.2em;
          margin-bottom: 0.6em;
          font-size: 1.2em;
        }
        
        h4, h5, h6 {
          color: #95a5a6;
          margin-top: 1em;
          margin-bottom: 0.5em;
        }
        
        p {
          margin-bottom: 1em;
          text-align: justify;
        }
        
        code {
          background-color: #f8f9fa;
          padding: 0.2em 0.4em;
          border-radius: 3px;
          font-family: "Consolas", "Monaco", "Courier New", "Source Code Pro", monospace;
          font-size: 0.9em;
          color: #e74c3c;
        }
        
        pre {
          background-color: #f8f9fa;
          padding: 1em;
          border-radius: 5px;
          overflow-x: auto;
          border-left: 4px solid #3498db;
          margin: 1em 0;
        }
        
        pre code {
          background-color: transparent;
          padding: 0;
          color: #333;
        }
        
        blockquote {
          border-left: 4px solid #3498db;
          margin: 1em 0;
          padding-left: 1em;
          color: #7f8c8d;
          background-color: #f8f9fa;
          padding: 1em;
          border-radius: 0 5px 5px 0;
        }
        
        img {
          max-width: 100%;
          height: auto;
          display: block;
          margin: 1em auto;
          border-radius: 5px;
          box-shadow: 0 2px 4px rgba(0,0,0,0.1);
        }
        
        table {
          border-collapse: collapse;
          width: 100%;
          margin: 1em 0;
          font-size: 0.9em;
        }
        
        th, td {
          border: 1px solid #ddd;
          padding: 8px;
          text-align: left;
        }
        
        th {
          background-color: #f2f2f2;
          font-weight: bold;
        }
        
        tr:nth-child(even) {
          background-color: #f9f9f9;
        }
        
        ul, ol {
          margin: 1em 0;
          padding-left: 2em;
        }
        
        li {
          margin-bottom: 0.5em;
        }
        
        a {
          color: #3498db;
          text-decoration: none;
        }
        
        a:hover {
          text-decoration: underline;
        }
        
        .highlight {
          background-color: #fff3cd;
          padding: 0.2em 0.4em;
          border-radius: 3px;
        }
        
        .warning {
          background-color: #f8d7da;
          color: #721c24;
          padding: 1em;
          border-radius: 5px;
          border-left: 4px solid #dc3545;
          margin: 1em 0;
        }
        
        .info {
          background-color: #d1ecf1;
          color: #0c5460;
          padding: 1em;
          border-radius: 5px;
          border-left: 4px solid #17a2b8;
          margin: 1em 0;
        }
        EOF
        
    - name: Prepare markdown files
      run: |
        # 创建临时目录
        mkdir -p temp_epub
        
        # 定义要处理的文件列表（使用数组而不是关联数组，更兼容）
        files=(
          "docs/README.md:00-README.md"
          "docs/前言.md:01-前言.md"
          "docs/chapter1/第一章 NLP基础概念.md:02-第一章-NLP基础概念.md"
          "docs/chapter2/第二章 Transformer架构.md:03-第二章-Transformer架构.md"
          "docs/chapter3/第三章 预训练语言模型.md:04-第三章-预训练语言模型.md"
          "docs/chapter4/第四章 大语言模型.md:05-第四章-大语言模型.md"
          "docs/chapter5/第五章 动手搭建大模型.md:06-第五章-动手搭建大模型.md"
          "docs/chapter6/第六章 大模型训练流程实践.md:07-第六章-大模型训练流程实践.md"
          "docs/chapter7/第七章 大模型应用.md:08-第七章-大模型应用.md"
        )
        
        # 复制文件并检查
        copied_count=0
        for file_pair in "${files[@]}"; do
          IFS=':' read -r source target <<< "$file_pair"
          if [[ -f "$source" ]]; then
            cp "$source" "temp_epub/$target"
            echo "✓ 复制: $(basename "$source")"
            ((copied_count++))
          else
            echo "⚠️  警告: $source 不存在"
          fi
        done
        
        if [[ $copied_count -eq 0 ]]; then
          echo "❌ 错误: 没有找到任何markdown文件"
          exit 1
        fi
        
        echo "📊 成功复制 $copied_count 个文件"
        echo "📁 文件列表:"
        ls -la temp_epub/
        
    - name: Generate EPUB
      run: |
        echo "🔄 开始生成EPUB文件..."
        
        # 检查封面图片
        if [[ ! -f "docs/images/head.jpg" ]]; then
          echo "⚠️  警告: 封面图片不存在，将使用默认封面"
          cover_option=""
        else
          cover_option="--epub-cover-image=docs/images/head.jpg"
        fi
        
        # 生成EPUB
        pandoc \
          --from markdown \
          --to epub \
          --metadata-file=metadata.yaml \
          --css=epub-style.css \
          $cover_option \
          --toc \
          --toc-depth=3 \
          --number-sections \
          --epub-chapter-level=1 \
          --verbose \
          -o "Happy-LLM-教程.epub" \
          temp_epub/*.md
        
        if [[ $? -eq 0 ]]; then
          echo "✅ EPUB文件生成成功!"
          ls -lh "Happy-LLM-教程.epub"
          
          # 验证文件
          if [[ -f "Happy-LLM-教程.epub" ]]; then
            file_size=$(stat -c%s "Happy-LLM-教程.epub" 2>/dev/null || stat -f%z "Happy-LLM-教程.epub" 2>/dev/null || echo "unknown")
            echo "📏 文件大小: $file_size bytes"
          else
            echo "❌ 错误: EPUB文件未生成"
            exit 1
          fi
        else
          echo "❌ EPUB文件生成失败"
          exit 1
        fi
        
    - name: Upload EPUB artifact
      uses: actions/upload-artifact@v4
      with:
        name: Happy-LLM-教程.epub
        path: Happy-LLM-教程.epub
        retention-days: 30
        
    - name: Create Release
      if: github.event_name == 'push' && github.ref == 'refs/heads/main'
      uses: softprops/action-gh-release@v1
      with:
        files: Happy-LLM-教程.epub
        tag_name: v${{ github.run_number }}
        name: Release v${{ github.run_number }} - Happy-LLM教程EPUB
        body: |
          ## Happy-LLM 大语言模型教程 EPUB版本
          
          自动生成的EPUB电子书，包含完整的教程内容。
          
          ### 📚 包含章节
          - 前言
          - 第一章 NLP基础概念
          - 第二章 Transformer架构
          - 第三章 预训练语言模型
          - 第四章 大语言模型
          - 第五章 动手搭建大模型
          - 第六章 大模型训练流程实践
          - 第七章 大模型应用
          
          ### 📖 阅读建议
          - 支持目录导航
          - 包含代码高亮
          - 适配中文显示
          - 包含图片和表格
          
          ### 🔧 技术细节
          - 使用pandoc转换
          - 自定义CSS样式
          - 支持中文排版
          - 自动生成目录
          
          ---
          
          *此文件由GitHub Actions自动生成于 ${{ github.event.head_commit.timestamp }}*
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 